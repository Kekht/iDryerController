// пример диммера на симисторе с внешним детектором нуля
// или готовый китайский модуль https://ali.ski/yGU73N
// используется библиотека GyverTimers (минимум версия 1.5)
// по аналогии можно сделать диммер на любом таймере ардуино
// в том числе любом из 6-ти таймеров для Mega
// вызов setPeriod оптимизирован
#include <Arduino.h>
#define ZERO_PIN 2       // пин детектора нуля
#define INT_NUM 0        // соответствующий ему номер прерывания
#define DIMMER_PIN 5     // управляющий пин симистора
#define FAN 6
#include <GyverTimers.h> // библиотека таймера
#include <Configuration.h>
#include <avr/wdt.h>
int dimmer;              // переменная диммера
int isrCounter;
int timerCounter;
unsigned long time = 0;
unsigned long time1 = 0;
unsigned long time2 = 0;

#define BUZZER_PIN 3
#define SERVO_1_PIN 7
#define SERVO_2_PIN 8


void WDT(uint16_t time)
{
#ifdef WITH_BLACKJACK_AND_HOOKERS
    wdt_reset();
    wdt_disable();
#ifdef DEBUG
#else
    wdt_enable(time); // TODO после перезагрузки по ресету сделать уведомление при старте, что был ресет
#endif
#endif
}

// void piii(uint16_t time_ms)
// {
//     analogWrite(BUZZER_PIN, BUZZER_PWM);
//     delay(time_ms);
//     analogWrite(BUZZER_PIN, 0);
// }

#ifdef WITH_BLACKJACK_AND_HOOKERS
void servoPulse(int pin, int angle)
{
    Serial.println("1");
    // WDT(WDTO_4S);
#ifdef DEBUG
    // wdt_reset();
    // wdt_disable();
#endif
    Serial.println("2");
   //  piii(SERVO_CUCKOO);
    int pulsewidth = map(angle, 0, 180, SERVO_MIN_PULSE, SERVO_MAX_PULSE);
    Serial.println("3");
    for (int pulseCounter = 0; pulseCounter <= 50; pulseCounter++)
    {
    Serial.println("4");
        unsigned long startTime = micros();
        digitalWrite(DIMMER_PIN, HIGH);
        digitalWrite(pin, HIGH);
    Serial.println("4");
        while (micros() - startTime < pulsewidth)
        {
        }
    Serial.println("6");
        digitalWrite(DIMMER_PIN, HIGH);
        digitalWrite(pin, LOW);
    Serial.println("7");
        while (micros() - startTime < SERVO_PERIOD_MS * 1000)
        {
        }
    Serial.println("8");
    }
}
#endif


void setup()
{
    Serial.begin(9600);
    Serial.println("START1");
    pinMode(DIMMER_PIN, OUTPUT);
    pinMode(SERVO_1_PIN, OUTPUT);
    pinMode(SERVO_2_PIN, OUTPUT);
    // servoPulse(SERVO_1_PIN, 180);
    // servoPulse(SERVO_1_PIN, 90);
    // servoPulse(SERVO_2_PIN, 180);
    // servoPulse(SERVO_2_PIN, 90);
}

void loop()
{
    digitalWrite(DIMMER_PIN, HIGH);
    servoPulse(SERVO_1_PIN, 180);
    servoPulse(SERVO_1_PIN, 90);
    servoPulse(SERVO_2_PIN, 180);
    servoPulse(SERVO_2_PIN, 90);
    Serial.println("END2");
    delay(1000);
}


